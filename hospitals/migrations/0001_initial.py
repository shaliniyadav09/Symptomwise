# Generated by Django 5.2.5 on 2025-09-24 17:58

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HospitalFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(choices=[('medical', 'Medical Equipment'), ('comfort', 'Patient Comfort'), ('technology', 'Technology'), ('accessibility', 'Accessibility'), ('parking', 'Parking & Transport'), ('food', 'Food & Dining')], max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Hospital Facilities',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HospitalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(choices=[('emergency', 'Emergency Services'), ('diagnostic', 'Diagnostic Services'), ('surgical', 'Surgical Services'), ('specialty', 'Specialty Care'), ('wellness', 'Wellness & Preventive'), ('support', 'Support Services')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HospitalRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=100)),
                ('patient_email', models.EmailField(blank=True, max_length=254)),
                ('overall_rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('cleanliness_rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('staff_rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('facilities_rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('value_rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('review_title', models.CharField(blank=True, max_length=200)),
                ('review_text', models.TextField(blank=True)),
                ('visit_date', models.DateField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('treatment_type', models.CharField(blank=True, max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='tenants.hospital')),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HospitalRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital_name', models.CharField(max_length=200)),
                ('registration_number', models.CharField(blank=True, max_length=100)),
                ('license_number', models.CharField(blank=True, max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(default='India', max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('preferred_subdomain', models.CharField(help_text='Preferred subdomain (e.g., apollo for apollo.yourdomain.com)', max_length=50, validators=[django.core.validators.RegexValidator('^[a-z0-9-]+$', 'Only lowercase letters, numbers, and hyphens allowed')])),
                ('license_document', models.FileField(blank=True, upload_to='hospital_documents/')),
                ('registration_document', models.FileField(blank=True, upload_to='hospital_documents/')),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_email', models.EmailField(max_length=254)),
                ('owner_phone', models.CharField(max_length=20)),
                ('owner_designation', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('active', 'Active')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenants.hospital')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_hospitals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Hospital Registration',
                'verbose_name_plural': 'Hospital Registrations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HospitalContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('main', 'Main Reception'), ('emergency', 'Emergency'), ('appointment', 'Appointments'), ('billing', 'Billing'), ('pharmacy', 'Pharmacy'), ('lab', 'Laboratory'), ('admin', 'Administration')], max_length=20)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('extension', models.CharField(blank=True, max_length=10)),
                ('available_24x7', models.BooleanField(default=False)),
                ('working_hours', models.JSONField(default=dict, help_text='Working hours by day')),
                ('is_active', models.BooleanField(default=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_points', to='tenants.hospital')),
            ],
            options={
                'ordering': ['contact_type', 'department'],
                'unique_together': {('hospital', 'contact_type', 'department')},
            },
        ),
        migrations.CreateModel(
            name='HospitalFacilityOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_available', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('capacity', models.CharField(blank=True, max_length=100)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitals.hospitalfacility')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_offerings', to='tenants.hospital')),
            ],
            options={
                'ordering': ['facility__category', 'facility__name'],
                'unique_together': {('hospital', 'facility')},
            },
        ),
        migrations.CreateModel(
            name='HospitalInsurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_name', models.CharField(max_length=100)),
                ('policy_types', models.JSONField(default=list, help_text='List of accepted policy types')),
                ('contact_info', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accepted_insurance', to='tenants.hospital')),
            ],
            options={
                'ordering': ['provider_name'],
                'unique_together': {('hospital', 'provider_name')},
            },
        ),
        migrations.CreateModel(
            name='HospitalServiceOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_available', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('contact_info', models.CharField(blank=True, max_length=200)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_offerings', to='tenants.hospital')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitals.hospitalservice')),
            ],
            options={
                'ordering': ['service__category', 'service__name'],
                'unique_together': {('hospital', 'service')},
            },
        ),
    ]
